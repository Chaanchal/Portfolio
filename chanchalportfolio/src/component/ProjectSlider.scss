// color pallete
$white:           #FFFFFF;
$black:           #000000;
$background:      purple;
$shadow:          rgba(0,0,0,0.3);
// mixins
@mixin transform($parameter){
  -webkit-transform: $parameter;
  -moz-transform: $parameter;
  -o-transform: $parameter;
  -ms-transform: $parameter;
  transform: $parameter;
}
@mixin transition($parameter){
  -webkit-transition: $parameter;
  -moz-transition: $parameter;
  -o-transition: $parameter;
  -ms-transition: $parameter;
  transition: $parameter;
}
@mixin shadow($parameter){
  -webkit-box-shadow: $parameter;
  -moz-box-shadow: $parameter;
  -o-box-shadow: $parameter;
  -ms-box-shadow: $parameter;
  box-shadow: $parameter;
}

// array
$transform_3D:"perspective(1300px) rotateY(5deg) translate3d(510px, 0px, 0px)",
              "perspective(1300px) rotateY(5deg) translate3d(510px, 40px, -200px)",
              "perspective(1300px) rotateY(5deg) translate3d(510px, 80px, -400px)",
              "perspective(1300px) rotateY(5deg) translate3d(510px, 120px, -600px)",
              "perspective(1300px) rotateY(5deg) translate3d(510px, 160px, -800px)",
              "perspective(1300px) rotateY(5deg) translate3d(510px, 200px, -1000px)",
              "perspective(1300px) rotateY(5deg) translate3d(510px, 240px, -1200px)",
              "perspective(1300px) rotateY(5deg) translate3d(510px, 280px, -1450px)",
              "perspective(1300px) rotateY(5deg) translate3d(510px, 320px, -1700px)";


*, *:before, *:after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}


#slider-wrapp{
  width: 100%;
  max-width:500px;
  height: auto;
  margin:150px auto;
  text-align: center;
  #slider{
    width:100%;
    height:auto;
    position: relative;
    .slide{
      color: $white;
      position: absolute;
      width: 500px;
      height: 550px;
      left:50%;
      margin-left:-200px;
      @include shadow(0 -36px 9px -28px $shadow);
      @include transition(all 0.5s ease);
      @include transform(perspective(1300px) translate3d(0px,-130px,-500px));
      img{
        padding:3px;
        background: $white;
        border-radius:3px;
        width: 100%;
      }
      $transY:-145;
      $transZ:-370;
      @for $i from 4 to 0{
        &:nth-last-child(#{$i}){
          $transY: $transY + 35;
          $transZ: $transZ + 80;
          @include transform(perspective(1300px) translate3d(0px , $transY + px, $transZ + px ));
        }
      }
      &.active{
        @include transform(perspective(1300px) translate3d(0px, 100px, 0px));
        opacity: 0;
      }
    }
    &.transfomer{
        .slide{
          $transY:-145;
          $transZ:-370;
          @for $i from 5 to 1{
            &:nth-last-child(#{$i}){
              $transY: $transY + 35;
              $transZ: $transZ + 80;
              @include transform(perspective(1300px) translate3d(0px , $transY + px, $transZ + px ));
            }
          } 
        }
    }
    &._3D{
      .slide{
        @include shadow(-50px 10px 50px -15px $shadow);
        @include transform(perspective(1300px) rotateY(30deg) translate3d(440px, -230px, -1950px));
        opacity: 0;
        @each $item in $transform_3D{
          $i:index($transform_3D, $item);
          &:nth-last-child(#{$i}){
            @include transform(#{$item});
            @if length($transform_3D) != $i{
              opacity: 1;
            }@else{
              opacity: 0.5;
            }
          }
        }
        &.active{
          opacity:0;
          @include transform(perspective(1300px) rotateX(0deg) rotateY(35deg) rotateZ(0deg) scale3d(1, 1, 1) translate3d(515px, 100px, 300px) !important);
        }
      }

      &.transfomer{
        .slide{
          @each $item in $transform_3D{
            $i:index($transform_3D, $item) + 1;
            &:nth-last-child(#{$i}){
              @include transform(#{$item});
              @if length($transform_3D) != ($i - 1){
                opacity: 1;
              }@else{
                opacity: 0.5;
              }
            }
          }
        }
      }
    }
  }
}
